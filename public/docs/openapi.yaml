openapi: 3.0.3
info:
  title: 'Fatura Authentication System'
  description: 'A service used for user authentication and authorization'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'Get a JWT token via given credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: ufb
                password:
                  type: string
                  description: ''
                  example: nulla
              required:
                - email
                - password
      security: []
  /api/check:
    post:
      summary: 'Get the authenticated User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                JWT:
                  type: token
                  description: 'via headers section.'
                  example: 'Authorization = Bearer {JWT token}'
      security: []
  /api/logout:
    post:
      summary: 'Log the user out (Invalidate the token)'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/refresh:
    post:
      summary: 'Refresh a token.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin:
    get:
      summary: 'Only Admins'
      description: 'This endpoint checks role and allows only admins to pass.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                JWT:
                  type: token
                  description: 'via headers section.'
                  example: 'Authorization = Bearer {JWT token}'
      security: []
tags:
  -
    name: Endpoints
    description: ''
